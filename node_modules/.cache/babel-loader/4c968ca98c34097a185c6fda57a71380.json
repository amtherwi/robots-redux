{"ast":null,"code":"import * as Types from '../constats';\nconst initialStateSearch = {\n  searchFiled: ''\n};\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case Types.CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, {\n        searchFiled: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: ''\n};\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n  switch (action.type) {\n    case Types.REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {\n        isPending: true\n      });\n\n    case Types.REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {\n        robots: action.payload,\n        isPending: false\n      });\n\n    case Types.REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/abdurrahman/Desktop/CL/React/robots-redux/src/store/reducers/robots.reducers.js"],"names":["Types","initialStateSearch","searchFiled","searchRobots","state","action","type","CHANGE_SEARCH_FIELD","Object","assign","payload","initialStateRobots","isPending","robots","error","requestRobots","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,aAAvB;AAEA,MAAMC,kBAAkB,GAAG;AACvBC,EAAAA,WAAW,EAAE;AADU,CAA3B;AAIA,OAAO,MAAMC,YAAY,GACjB,CAACC,KAAK,GAACH,kBAAP,EAA2BI,MAAM,GAAC,EAAlC,KAA0C;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,KAAK,CAACO,mBAAX;AACI,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAACF,QAAAA,WAAW,EAAEG,MAAM,CAACK;AAArB,OAAzB,CAAP;;AACJ;AACI,aAAON,KAAP;AAJR;AAOH,CATM;AAWP,MAAMO,kBAAkB,GAAG;AACvBC,EAAAA,SAAS,EAAE,KADY;AAEvBC,EAAAA,MAAM,EAAK,EAFY;AAGvBC,EAAAA,KAAK,EAAM;AAHY,CAA3B;AAMA,OAAO,MAAMC,aAAa,GAClB,CAAEX,KAAK,GAACO,kBAAR,EAA4BN,MAAM,GAAC,EAAnC,KAA0C;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,KAAK,CAACgB,sBAAX;AACI,aAAOR,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAACQ,QAAAA,SAAS,EAAE;AAAZ,OAAzB,CAAP;;AACJ,SAAKZ,KAAK,CAACiB,sBAAX;AACI,aAAOT,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAACS,QAAAA,MAAM,EAAER,MAAM,CAACK,OAAhB;AAAyBE,QAAAA,SAAS,EAAC;AAAnC,OAAzB,CAAP;;AACJ,SAAKZ,KAAK,CAACkB,qBAAX;AACI,aAAOV,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAACU,QAAAA,KAAK,EAAET,MAAM,CAACK,OAAf;AAAwBE,QAAAA,SAAS,EAAC;AAAlC,OAAzB,CAAP;;AACJ;AACI,aAAOR,KAAP;AARR;AAUH,CAZM","sourcesContent":["import * as Types from '../constats'\n\nconst initialStateSearch = {\n    searchFiled: ''\n}\n\nexport const searchRobots = \n        (state=initialStateSearch, action={}) =>  {\n    switch(action.type) {\n        case Types.CHANGE_SEARCH_FIELD:\n            return Object.assign({}, state, {searchFiled: action.payload})\n        default:\n            return state;\n    }   \n\n}\n\nconst initialStateRobots = {\n    isPending: false,\n    robots   : [],\n    error    : ''     \n}\n\nexport const requestRobots = \n        ( state=initialStateRobots, action={}) => {\n    switch(action.type) {\n        case Types.REQUEST_ROBOTS_PENDING:\n            return Object.assign({}, state, {isPending: true})\n        case Types.REQUEST_ROBOTS_SUCCESS:\n            return Object.assign({}, state, {robots: action.payload, isPending:false})\n        case Types.REQUEST_ROBOTS_FAILED:\n            return Object.assign({}, state, {error: action.payload, isPending:false})\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/abdurrahman/Desktop/CL/React/robotsapp-redux/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from './compnents/CardList'; // import { robots } from './robots'\n\nimport Scroll from './compnents/Scroll';\nimport SearchBox from './compnents/SearchBox';\nimport './App.css';\nimport { setSearchField, requestRobots } from './store/actions/robots.actions'; // or import * as Actions from './store/actions/robots.actions'\n\nconst mapStateToProps = state => {\n  return {\n    searchFiled: state.searchRobots.searchFiled,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  };\n};\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    // searchfield we do not reed this becaouse app recived it as props\n    const robots = this.state.robots;\n    const _this$props = this.props,\n          searchFiled = _this$props.searchFiled,\n          onSearchChange = _this$props.onSearchChange;\n    const filterRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchFiled.toLowerCase());\n    });\n    return !robots.length ? React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Looding... \") : React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"RoboFriends\"), React.createElement(SearchBox, {\n      searchChange: onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Scroll, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(CardList, {\n      robots: filterRobots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/abdurrahman/Desktop/CL/React/robotsapp-redux/src/App.js"],"names":["React","Component","connect","CardList","Scroll","SearchBox","setSearchField","requestRobots","mapStateToProps","state","searchFiled","searchRobots","robots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","componentDidMount","props","render","filterRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,sBAArB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAO,WAAP;AAEA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,gCAA9C,C,CACA;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WAD3B;AAELE,IAAAA,MAAM,EAAEH,KAAK,CAACF,aAAN,CAAoBK,MAFvB;AAGLC,IAAAA,SAAS,EAAEJ,KAAK,CAACF,aAAN,CAAoBM,SAH1B;AAILC,IAAAA,KAAK,EAAEL,KAAK,CAACF,aAAN,CAAoBO;AAJtB,GAAP;AAMD,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACV,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAD9B;AAELC,IAAAA,eAAe,EAAE,MAAML,QAAQ,CAACT,aAAa,EAAd;AAF1B,GAAP;AAID,CALD;;AAQA,MAAMe,GAAN,SAAkBrB,SAAlB,CAA4B;AAE5BsB,EAAAA,iBAAiB,GAAE;AAClB,SAAKC,KAAL,CAAWH,eAAX;AACA;;AAECI,EAAAA,MAAM,GAAG;AACP;AADO,UAECb,MAFD,GAEY,KAAKH,KAFjB,CAECG,MAFD;AAAA,wBAGiC,KAAKY,KAHtC;AAAA,UAGCd,WAHD,eAGCA,WAHD;AAAA,UAGcO,cAHd,eAGcA,cAHd;AAIP,UAAMS,YAAY,GAAGd,MAAM,CAACe,MAAP,CAAcC,KAAK,IAAI;AAC1C,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCrB,WAAW,CAACoB,WAAZ,EAAlC,CAAP;AACD,KAFoB,CAArB;AAGA,WAAO,CAAClB,MAAM,CAACoB,MAAR,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADK,GAGH;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAEf,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAGS,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF,CAHJ;AAWD;;AAxByB;;AA2B5B,eAAexB,OAAO,CAACM,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport CardList from './compnents/CardList';\n// import { robots } from './robots'\nimport Scroll from './compnents/Scroll'\nimport SearchBox from './compnents/SearchBox'\nimport './App.css';\n\nimport { setSearchField, requestRobots } from './store/actions/robots.actions'\n// or import * as Actions from './store/actions/robots.actions'\n\nconst mapStateToProps = state => {\n  return {\n    searchFiled: state.searchRobots.searchFiled,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  }\n}\n\n\nclass App extends Component {\n  \ncomponentDidMount(){\n this.props.onRequestRobots();\n}\n\n  render() {\n    // searchfield we do not reed this becaouse app recived it as props\n    const { robots} =  this.state;\n    const { searchFiled, onSearchChange } = this.props;\n    const filterRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchFiled.toLowerCase())\n    })\n    return !robots.length ? \n      <h2>Looding... </h2> :\n       (\n        <div className='tc'>\n          <h1>RoboFriends</h1>\n          <SearchBox searchChange={onSearchChange}/>\n          <Scroll>\n            <CardList robots={ filterRobots }/>\n          </Scroll>\n        </div>    \n        );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}
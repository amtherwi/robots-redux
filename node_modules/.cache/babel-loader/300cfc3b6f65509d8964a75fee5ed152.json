{"ast":null,"code":"var _jsxFileName = \"/Users/abdurrahman/Desktop/CL/React/robotsapp-redux/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from './compnents/CardList'; // import { robots } from './robots'\n\nimport Scroll from './compnents/Scroll';\nimport SearchBox from './compnents/SearchBox';\nimport './App.css';\nimport * as Actions from './store/actions/robots.actions'; // or import * as Actions from './store/actions/robots.actions'\n\nconst mapStateToProps = state => {\n  return {\n    searchFiled: state.searchRobots.searchFiled\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(Actions.setSearchField(event.target.value))\n  };\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: ''\n    };\n  } // now comment this becaouse we do not need it in redux\n  // onSearchChange = (event) =>{\n  //   this.setState({searchfield: event.target.value})\n  //   // console.log(event.target.value)\n  // }\n\n\n  componentDidMount() {\n    // console.log(this.props.store.getState())\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      robots: users\n    }));\n  }\n\n  render() {\n    // searchfield we do not reed this becaouse app recived it as props\n    const robots = this.state.robots;\n    const _this$props = this.props,\n          searchFiled = _this$props.searchFiled,\n          onSearchChange = _this$props.onSearchChange;\n    const filterRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchFiled.toLowerCase());\n    });\n    return !robots.length ? React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Looding... \") : React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"RoboFriends\"), React.createElement(SearchBox, {\n      searchChange: onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Scroll, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(CardList, {\n      robots: filterRobots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/abdurrahman/Desktop/CL/React/robotsapp-redux/src/App.js"],"names":["React","Component","connect","CardList","Scroll","SearchBox","Actions","mapStateToProps","state","searchFiled","searchRobots","mapDispatchToProps","dispatch","onSearchChange","event","setSearchField","target","value","App","constructor","robots","searchfield","componentDidMount","fetch","then","response","json","users","setState","render","props","filterRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,sBAArB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAO,WAAP;AAEA,OAAO,KAAKC,OAAZ,MAAyB,gCAAzB,C,CACA;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD;AAD3B,GAAP;AAGD,CAJD;;AAMA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACN,OAAO,CAACS,cAAR,CAAuBD,KAAK,CAACE,MAAN,CAAaC,KAApC,CAAD;AAD9B,GAAP;AAGD,CAJD;;AAOA,MAAMC,GAAN,SAAkBjB,SAAlB,CAA4B;AAC1BkB,EAAAA,WAAW,GAAE;AACX;AACA,SAAKX,KAAL,GAAa;AACXY,MAAAA,MAAM,EAAG,EADE;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAKD,GARyB,CAU1B;AACA;AACA;AACA;AACA;;;AACFC,EAAAA,iBAAiB,GAAE;AACjB;AACAC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAACR,MAAAA,MAAM,EAAEO;AAAT,KAAd,CAFf;AAGD;;AAECE,EAAAA,MAAM,GAAG;AACP;AADO,UAECT,MAFD,GAEY,KAAKZ,KAFjB,CAECY,MAFD;AAAA,wBAGiC,KAAKU,KAHtC;AAAA,UAGCrB,WAHD,eAGCA,WAHD;AAAA,UAGcI,cAHd,eAGcA,cAHd;AAIP,UAAMkB,YAAY,GAAGX,MAAM,CAACY,MAAP,CAAcC,KAAK,IAAI;AAC1C,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC3B,WAAW,CAAC0B,WAAZ,EAAlC,CAAP;AACD,KAFoB,CAArB;AAGA,WAAO,CAACf,MAAM,CAACiB,MAAR,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADK,GAGH;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAExB,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAGkB,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF,CAHJ;AAWD;;AAxCyB;;AA2C5B,eAAe7B,OAAO,CAACK,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport CardList from './compnents/CardList';\n// import { robots } from './robots'\nimport Scroll from './compnents/Scroll'\nimport SearchBox from './compnents/SearchBox'\nimport './App.css';\n\nimport * as Actions from './store/actions/robots.actions'\n// or import * as Actions from './store/actions/robots.actions'\n\nconst mapStateToProps = state => {\n  return {\n    searchFiled: state.searchRobots.searchFiled\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(Actions.setSearchField(event.target.value))\n  }\n}\n\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      robots : [],\n      searchfield: ''\n\n    }\n  }\n\n  // now comment this becaouse we do not need it in redux\n  // onSearchChange = (event) =>{\n  //   this.setState({searchfield: event.target.value})\n  //   // console.log(event.target.value)\n  // }\ncomponentDidMount(){\n  // console.log(this.props.store.getState())\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  .then(users => this.setState({robots: users}))\n}\n\n  render() {\n    // searchfield we do not reed this becaouse app recived it as props\n    const { robots} =  this.state;\n    const { searchFiled, onSearchChange } = this.props;\n    const filterRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchFiled.toLowerCase())\n    })\n    return !robots.length ? \n      <h2>Looding... </h2> :\n       (\n        <div className='tc'>\n          <h1>RoboFriends</h1>\n          <SearchBox searchChange={onSearchChange}/>\n          <Scroll>\n            <CardList robots={ filterRobots }/>\n          </Scroll>\n        </div>    \n        );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}
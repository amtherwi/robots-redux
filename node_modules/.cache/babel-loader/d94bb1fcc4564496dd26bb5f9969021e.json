{"ast":null,"code":"var _jsxFileName = \"/Users/abdurrahman/Desktop/CL/React/robotsapp-redux/src/compnents/CounterButton.js\";\nimport React, { Component } from 'react';\n\nclass CounterButton extends Component {\n  constructor() {\n    super();\n\n    this.updateCount = () => {\n      this.setState(state => {\n        return {\n          count: state.count + 1\n        };\n      });\n    };\n\n    this.state = {\n      count: 0\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.count !== nextState.count) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      color: this.props.color,\n      onClick: this.updateCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"count: \", this.state.count);\n  }\n\n}\n\nexport default CounterButton;","map":{"version":3,"sources":["/Users/abdurrahman/Desktop/CL/React/robotsapp-redux/src/compnents/CounterButton.js"],"names":["React","Component","CounterButton","constructor","updateCount","setState","state","count","shouldComponentUpdate","nextProps","nextState","render","props","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAClCE,EAAAA,WAAW,GAAE;AACT;;AADS,SAafC,WAbe,GAaD,MAAM;AAChB,WAAKC,QAAL,CAAcC,KAAK,IAAI;AACnB,eAAO;AAACC,UAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;AAAtB,SAAP;AAAgC,OADpC;AAEH,KAhBc;;AAET,SAAKD,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEHC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxC,QAAI,KAAKJ,KAAL,CAAWC,KAAX,KAAqBG,SAAS,CAACH,KAAnC,EAA0C;AACxC,aAAO,IAAP;AACD;;AACH,WAAO,KAAP;AACD;;AAKDI,EAAAA,MAAM,GAAG;AACP,WACI;AAAQ,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,KAA1B;AAAiC,MAAA,OAAO,EAAE,KAAKT,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACY,KAAKE,KAAL,CAAWC,KADvB,CADJ;AAKD;;AAxBmC;;AA2BtC,eAAeL,aAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass CounterButton extends Component {\n    constructor(){\n        super();\n        this.state = {\n            count: 0\n        }\n    }\n    \n  shouldComponentUpdate(nextProps, nextState) {\n      if (this.state.count !== nextState.count) {\n        return true;\n      }\n    return false;\n  }\n  updateCount = () => {\n      this.setState(state => {\n          return {count: state.count + 1}})\n  }\n  render() {\n    return (\n        <button color={this.props.color} onClick={this.updateCount}>\n            count: {this.state.count}\n        </button>\n    );\n  }\n}\n\nexport default CounterButton;\n"]},"metadata":{},"sourceType":"module"}